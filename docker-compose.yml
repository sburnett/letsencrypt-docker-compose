version: "2"

services:
  nginx:
    build: ./nginx
    image: evgeniy-khyst/nginx
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - ./vhosts:/etc/nginx/vhosts
      - ./html:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    build: ./certbot
    image: evgeniy-khyst/certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot

  cron:
    build: ./cron
    image: evgeniy-khyst/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped

  www-whichride:
    image: us-west1-docker.pkg.dev/sburnett/www/www-whichride
    ports:
      - "8081:80"
    restart: unless-stopped

  www-tapercaper:
    image: us-west1-docker.pkg.dev/sburnett/www/www-tapercaper
    ports:
      - "8082:80"
    restart: unless-stopped
      
  www-pantry:
    image: us-west1-docker.pkg.dev/sburnett/www/www-pantry
    volumes:
      - pantry_db:/db
    ports:
      - "8083:8080"
    restart: unless-stopped
    # To let the container create a database in the volume:
    # 1. docker inspect pantry_db
    # 2. Find the "Mountpoint" field
    # 3. sudo chown 1234:1234 $MOUNTPOINT
    user: 1234:1234

volumes:
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:
  pantry_db:
    external: true